* {
    margin: 0;
    padding: 0;
}

html,
body {
    height: 100%;
}

section {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}


/* para crear una animación se usa la siguiente sintaxis */
@keyframes slideInLeft {
    /* 'from' representa el inicio de la animación o el 0% de la animación completada */
    from {
        transform: translateX(-300px);
    }

    /* 'to' representa el final de la animación el el 100% de la animación completada */
    to {
        transform: translateX(0);
    }
}

/* para ver la animación se la debemos aplicar al elemento que queremos animar a través de las 7 propiedades que componen una animación */
.slideInLeft {
    /* colocar el keyframe a usar para animar el elemento */
    animation-name: slideInLeft;

    /* establece el tiempo que le toma a la animación completar un ciclo completo, es decir ir desde el 0% hasta el 100% de la animación*/
    animation-duration: 1s;

    /* define la curva de aceleración para la animación y tenemos los valores comunes son (ease, ease-in, ease-in-out, ease-out, linear y otras) */
    animation-timing-function: ease-in;

    /* establece un tiempo de retraso a la animación antes de ser ejecutada, si se coloca 0s la animación se ejecutará al momento en que la página sea cargada */
    animation-delay: 1s;

    /* define cuantas veces se quiere que la animación se ejecute, por defecto es 1 lo que indica que se va a ejecutar la animación una vez, se usa el valor 'infinite' para ejecutar la animación para siempre */
    animation-iteration-count: 1;

    /* define si la animación va a ejecutarse de forma 'normal' o en reversa 'reverse' */
    animation-direction: normal;

    /* establece como la animación va a aplicar el estilo del keyframe antes y después de su ejecución 
    - none: va a dejar el elemento en su posición antes y después de la animación
    - forwards: va a dejar el elemento en la posición que quede al final de la animación
    - backwards: va a dejar el elemento en la posición que tenía antes de iniciar la animación
    - both: va a colocar el elemento en la posición indicada al iniciar la animación y lo va a dejar en la posición establecida al finalizar la animación */
    animation-fill-mode: both;
    transform: translateX(-150px);

    /* se puede usar una propiedad que condenza todas las propiedades anteriores la cual es */
    /* animation: name duration timing-function delay iteration-count direction fill-mode; */
    animation: slideInLeft 1s ease-in 1s 1 normal both;
}


@keyframes slideInRight {
    from {
        transform: translateX(300px);
    }

    to {
        transform: translateX(0);
    }
}

.slideInRight {
    animation: slideInRight 1s ease-in 1s 1 normal both;
}

@keyframes bounce {
    0%,
    20%,
    50%,
    80%,
    100% {
        transform: translateY(0);
    }

    40% {
        transform: translateY(-30px);
    }

    60% {
        transform: translateY(-15px);
    }
}

.bounce {
    animation: bounce 1s;
}